@page "/products/{ProductId:int}/edit"
@inject POS1.Services.ProductServices productService
@using POS1.Data
@using POS1.Utilities
@using System.Collections.Generic;
@using Microsoft.EntityFrameworkCore;
@using System.Diagnostics
@inject POS1.Services.UserServices userService
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext dbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<style>
    .form-control, option {
        border-color: #0091ff;
        font-weight: 500;
        height: 50px;
        font-size: 18px;
        border-radius: 10px;
    }
</style>


<h3 class="heading-1">Edit Product</h3>

<div class="container">
    <form Model="@product" @formname="Edit-product-form" method="post" @onsubmit="HandleValidSubmit">
        <AntiforgeryToken />
            <div class="form">
        <div class="form-group mb-3">
                <label for="name" class="form-label-style">Product Name:</label>
                <InputText id="name" class="form-control form-input-style" @bind-Value="product.Name" Required />
        </div>
        <div class="form-group mb-3">
                <label for="description" class="form-label-style">Description:   </label>
                <InputText type="text" class="form-control form-input-style" id="description" @bind-Value="product.Description" Required />

        </div>
         

        <div class="form-group mb-3">
                <label for="quantityUnit" class="form-label-style">Unit:</label>
            <select class="form-control" @bind="product.QuantityUnit">
                <option value="" disabled>Select unit</option>
                @foreach (QuantityUnit unit in Enum.GetValues(typeof(QuantityUnit)))
                {
                    <option value="@unit">@unit</option>
                }
            </select>
        </div>



        <div class="form-group mb-3">
                <label for="Barcode" class="form-label-style">Barcode:</label>
                <InputText class="form-control form-input-style" @bind-Value="product.Barcode" id="Barcode" />
        </div>

        <div>

                <button type="submit" class="btn btn-primary form-btn">Update Product</button>
            </div>
        </div>
    </form>
</div>

@code {
    [Parameter]
    public int ProductId { get; set; }
    public Product product = new();

    // private Product product = new Product();

    protected override async Task OnParametersSetAsync()
    {

        product = await productService.GetProductByIdAsync(ProductId);
    }

    private async Task HandleValidSubmit()
    {
        var userName = await CookieUtility.GetUserFromCookieAsync(httpContextAccessor);

        var user = await userService.GetUserByUsernameAsync(userName);

        var result = await productService.UpdateProductAsync(product, user);
        if (result != null)
        {
            NavigationManager.NavigateTo("/products");

        }
        else
        {

        }
    }
}
